### Packages
library(readxl)
library(tidyverse)
### Data
data <- read_excel("Final dataframe.xlsx")
data$latency.to.mount <- as.numeric(data$latency.to.mount)
### Data
data <- read_excel("Final dataframe.xlsx")
data$latency.to.mount <- as.numeric(data$latency.to.mount)
### Latency to mount ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$latency.to.mount)
after <- data %>% filter(female.mated.before==TRUE)
shapiro.test(after$latency.to.mount)
## Statistical test
wilcox.test(before$latency.to.mount,after$latency.to.mount,paired=TRUE)
## Graphical representation
ggplot(data, aes(x=female.mated.before, y=latency.to.mount, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("Female mating status") +
theme_light() +
theme(legend.position="none")
#### Female aggressiveness ####
## Normality test
shapiro.test(before$attacks.per.hour)
shapiro.test(after$attacks.per.hour)
## Statistical test
wilcox.test(before$attacks.per.hour,after$attacks.per.hour,paires=TRUE)
## Graphical representation
ggplot(data, aes(x=female.mated.before, y=attacks.per.hour, fill=attacks.per.hour)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("Female mating status") +
theme_light() +
theme(legend.position="none")
View(data)
### First courtship duration ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$first.courtship.duration)
data$first.courtship.duration <- as.numeric(data$first.courtship.duration)
data$first.courtship.duration <- as.numeric(data$first.courtship.duration)
data$first.mounting.duration <- as.numeric(data$first.mounting.duration)
### First courtship duration ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$first.courtship.duration)
after <- data %>% filter(female.mated.before==TRUE)
shapiro.test(after$first.courtship.duration)
## Statistical test
wilcox.test(before$first.courtship.duration,after$first.courtship.duration,paired=TRUE)
### Latency to mount ~ Female mating status
## Normality test
shapiro.test(before$latency.to.mount)
shapiro.test(after$latency.to.mount)
## Graphical representation
ggplot(data, aes(x=female.mated.before, y=first.courtship.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("Female mating status") +
theme_light() +
theme(legend.position="none")
### First mounting duration ~ Female mating status
## Normality test
shapiro.test(before$first.mounting.duration)
shapiro.test(after$first.mounting.duration)
## Statistical test
wilcox.test(before$first.mounting.duration,after$first.mounting.duration,paired=TRUE)
## Graphical representation
ggplot(data, aes(x=female.mated.before, y=first.mounting.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("Female mating status") +
theme_light() +
theme(legend.position="none")
### Data
data <- read_excel("Final dataframe.xlsx")
setwd("~/Formation/Stage/WAIKATO/Final paper")
### Data
data <- read_excel("Final dataframe.xlsx")
### Packages
library(readxl)
library(tidyverse)
library(gridExtra)
### Data
data <- read_excel("Final dataframe.xlsx")
data$latency.to.mount <- as.numeric(data$latency.to.mount)
data$first.courtship.duration <- as.numeric(data$first.courtship.duration)
data$first.mounting.duration <- as.numeric(data$first.mounting.duration)
### Packages
library(readxl)
library(tidyverse)
library(gridExtra)
### Data
data <- read_excel("Final dataframe.xlsx")
### Data
data <- read_excel("Final dataframe.xlsx")
data$latency.to.mount <- as.numeric(data$latency.to.mount)
data$first.courtship.duration <- as.numeric(data$first.courtship.duration)
data$first.mounting.duration <- as.numeric(data$first.mounting.duration)
### First courtship duration ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$first.courtship.duration)
after <- data %>% filter(female.mated.before==TRUE)
shapiro.test(after$first.courtship.duration)
## Statistical test
wilcox.test(before$first.courtship.duration,after$first.courtship.duration,paired=TRUE)
#### Female aggressiveness ####
## Normality test
shapiro.test(before$attacks.per.hour)
shapiro.test(after$attacks.per.hour)
## Statistical test
wilcox.test(before$attacks.per.hour,after$attacks.per.hour,paires=TRUE)
## Graphical representation
plot1 <- ggplot(data, aes(x=female.mated.before, y=first.courtship.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Courtship length (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,5000),breaks = c(0,1000,2000,3000,4000,5000))
## Graphical representation
plot2 <- ggplot(data, aes(x=female.mated.before, y=first.mounting.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Mounting length (s)") +
xlab("Female mating status") +
theme_light(base_size = 20) +
theme(legend.position="none")
## Graphical representation
plot3 <- ggplot(data, aes(x=female.mated.before, y=latency.to.mount, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,12000),breaks = c(0,3000,6000,9000,12000))
### Fuse all three results
grid.arrange(plot1,plot2,plot3,ncol=3)
### First courtship duration ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$first.courtship.duration)
after <- data %>% filter(female.mated.before==TRUE)
shapiro.test(after$first.courtship.duration)
## Statistical test
wilcox.test(before$first.courtship.duration,after$first.courtship.duration,paired=TRUE)
### First mounting duration ~ Female mating status
## Normality test
shapiro.test(before$first.mounting.duration)
shapiro.test(after$first.mounting.duration)
## Statistical test
wilcox.test(before$first.mounting.duration,after$first.mounting.duration,paired=TRUE)
### Latency to mount ~ Female mating status
## Normality test
shapiro.test(before$latency.to.mount)
shapiro.test(after$latency.to.mount)
## Statistical test
wilcox.test(before$latency.to.mount,after$latency.to.mount,paired=TRUE)
## Graphical representation
plot3 <- ggplot(data, aes(x=female.mated.before, y=latency.to.mount, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,12000),breaks = c(0,3000,6000,9000,12000))
plot3
### Packages
library(readxl)
library(tidyverse)
library(gridExtra)
library(plotrix)
### Data
data <- read_excel("Final dataframe.xlsx")
data$latency.to.mount <- as.numeric(data$latency.to.mount)
data$first.courtship.duration <- as.numeric(data$first.courtship.duration)
data$first.mounting.duration <- as.numeric(data$first.mounting.duration)
### First courtship duration ~ Female mating status
## Normality test
before <- data %>% filter(female.mated.before==FALSE)
shapiro.test(before$first.courtship.duration)
after <- data %>% filter(female.mated.before==TRUE)
shapiro.test(after$first.courtship.duration)
## Statistical test
wilcox.test(before$first.courtship.duration,after$first.courtship.duration,paired=TRUE)
## Graphical representation
plot1 <- ggplot(data, aes(x=female.mated.before, y=first.courtship.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Courtship length (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,5000),breaks = c(0,1000,2000,3000,4000,5000))
## Graphical representation
plot1 <- ggplot(data, aes(x=female.mated.before, y=first.courtship.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Courtship duration (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,5000),breaks = c(0,1000,2000,3000,4000,5000))
plot1
## Graphical representation
plot2 <- ggplot(data, aes(x=female.mated.before, y=first.mounting.duration, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
xlab("") +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Mounting duration (s)") +
xlab("Female mating status") +
theme_light(base_size = 20) +
theme(legend.position="none")
plot2
### Latency to mount ~ Female mating status
## Normality test
shapiro.test(before$latency.to.mount)
shapiro.test(after$latency.to.mount)
## Statistical test
wilcox.test(before$latency.to.mount,after$latency.to.mount,paired=TRUE)
## Graphical representation
plot3 <- ggplot(data, aes(x=female.mated.before, y=latency.to.mount, fill=female.mated.before)) +
geom_violin() +
geom_boxplot(width = 0.1) +
scale_fill_manual(values=c("#F2F2F2","gray75")) +
scale_x_discrete(labels = c("Unmated","Mated")) +
ylab("Latency to mount (s)") +
xlab("") +
theme_light(base_size = 20) +
theme(legend.position="none") +
scale_y_continuous(limits = c(0,12000),breaks = c(0,3000,6000,9000,12000))
plot3
### Fuse all three results
grid.arrange(plot1,plot2,plot3,ncol=3)
